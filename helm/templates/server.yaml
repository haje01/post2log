apiVersion: apps/v1
kind: Deployment
metadata:
  name: post2log 
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: post2log
  template:
    metadata:
      labels:
        app: post2log
    spec:
      containers:
      - name: post2log
        image: post2log
        command: ["uvicorn"]        
        args: [
          "server:app", 
          "--host", "0.0.0.0", "--port", "8000", 
          "--workers", "{{ .Values.workers }}", 
          "--log-level", "{{ .Values.uvicorn.logLevel }}"
        ]
        env:
        - name: ENDPOINT
          value: "{{ .Values.endpoint }}"
        - name: LOG_QUERYPARAM
          value: "{{ .Values.logQueryParam }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_ROT_BYTES
          value: "{{ .Values.rotBytes }}"
        - name: LOG_ROT_BACKUPS
          value: "{{ .Values.rotBackups }}"
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5  
        volumeMounts:
        - name: post2log-vol
          mountPath: /post2log
      volumes:
      - name: post2log-vol
        persistentVolumeClaim:
          claimName: post2log-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: post2log
spec:
  {{- if .Values.nodePort }}
  type: NodePort
  {{- end }}
  selector:
    app: post2log
  ports:
  - port: {{ .Values.port }}
    targetPort: 8000
    {{- if .Values.nodePort }}
    nodePort: {{ .Values.nodePort }}
    {{- end }}
---
{{- if .Values.ingressAnnotations }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: post2log
  annotations:
    {{ toYaml .Values.ingressAnnotations }}
spec:
  rules:
  - http:
      paths:
        - path: {{ .Values.endpoint }}
          pathType: Prefix
          backend: 
            service:
              name: post2log
              port: 
                number: 80 
{{- end }}